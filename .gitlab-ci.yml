variables:
  #PROJECT_NAME: kubernetes-0.0.1-SNAPSHOT
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2


stages:
  - build
  - test
  - docker_build
  - deploy_to_k8s

# Build and Test are two different jobs in the same stage.
# This allows us to run these two sequentially and making build faster

# Job 1:
Build:
  stage: build
  # Gradle image on which this would be run to build the project
  image: maven:3.6.3-openjdk-11
  cache:
    paths:
      - .m2/repository
  before_script:
    - mvn clean
  script:
    - mvn package
  artifacts:
    #name: WAR File
    paths:
      #- target/$PROJECT_NAME.jar
      - target/*jar
  #only:
    #changes:
      #- "^src/.*"


# Job 2:
Test:
  stage: test
  # Gradle image on which this would be run to test the project
  image: maven:3.6.3-openjdk-11
  script:
    - mvn test
  # ToDo: Add coverage
  only:
    changes:
      - "^src/.*"

Docker_build:
  image: docker:18.09
  services:
    - docker:18.09-dind
  stage: docker_build
  # This command is run before actual stages start running
  before_script:
    - docker login -u $CI_REGISTRY_USER -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE || true
    - docker build --cache-from $CI_REGISTRY_IMAGE -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
  only:
    changes:
      - "^src/.*"
      - "Dockerfile"
      #- ".gitlab-ci.yml"

Deploy_to_Kubernetes:
  stage: deploy_to_k8s
  image: google/cloud-sdk
  #before_script:
    # Authenticate with GKE
    #- gcloud container clusters get-credentials spring-customci-k8s --zone us-central1-a --project spring-cicd-k8s
  script:
    - kubectl version
    - sed_files
    - kubectl apply -f deployment.yml
  environment:
    name: production
    url: https://$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN
  only:
    - master
  when: manual

.helper_functions: &helper_functions_template |
  function sed_files() {
        echo "Applying SED on Deployment Yamls"
        sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" deployment.yml
        sed -i "s/__CI_PROJECT_PATH_SLUG__/${CI_PROJECT_PATH_SLUG}/" deployment.yml
  }

  function ensure_namespace() {
      kubectl describe namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
  }

before_script:
  - *helper_functions_template

